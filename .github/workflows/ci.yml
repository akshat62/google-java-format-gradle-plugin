name: CI

on: [push]

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    name: Unit tests (OpenJDK 8, ubuntu-latest)

    steps:
      - uses: actions/checkout@v2
      - uses: gradle/wrapper-validation-action@v1.0.4
      - uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: 8
          cache: 'gradle'
      - run: ./gradlew test
      - run: ./gradlew shadowJar generatePomFileForMavenPublication
      - uses: actions/upload-artifact@v2
        with:
          name: maven-artifacts
          path: |
            build/libs/google-java-format-gradle-plugin-*.jar
            build/publications/maven/pom-default.xml
      # - name: Save everything to be able to continue later with publishing
      #   uses: actions/cache@v2
      #   with:
      #     path: ~/.m2/repository
      #     key: ${{ runner.os }}-maven-local-${{ github.run_number }}-${{github.run_attempt }}

  integration-tests:
    needs: unit-tests
    name: Integration tests (OpenJDK ${{ matrix.jdk }}, ${{ matrix.os }}, Gradle ${{ matrix.gradle }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        jdk: [8, 11]
        # newest bugfix releases of all major releases since (including) 2.6, and the newest release
        # TODO: Gradle has runtime support for Java >9 only in v4.2.1 and upwards. Adjust matrix
        # java 11 is only supported with Gradle 5?!
        gradle: ['5.0,6.0.1,6.9.1']
        include:
          # newest bugfix releases of all minor releases since (including) 2.6
          # TODO: don't split manually, generate it: https://github.blog/changelog/2020-04-15-github-actions-new-workflow-features/#new-fromjson-method-in-expressions
          - os: ubuntu-latest
            jdk: 8
            gradle: "2.6,2.7,2.8,2.9,2.10,2.11,2.12,2.13,2.14.1,3.0,3.1,3.2.1,3.3,3.4.1,3.5.1"
          - os: ubuntu-latest
            jdk: 8
            gradle: "4.0.2,4.1,4.2.1,4.3.1,4.4.1,4.5.1,4.6,4.7,4.8.1,4.9,4.10.3,5.0,5.1.1,5.2.1,5.3.1,5.4.1,5.5.1,5.6.4"
          - os: ubuntu-latest
            jdk: 8
            gradle: "6.0.1,6.1.1,6.2.2,6.3,6.4.1,6.5.1,6.6.1,6.7.1,6.8.3,6.9.1"

    env:
      GRADLE_VERSIONS: ${{ matrix.gradle }}
      GRADLE_OPTS: '-Dorg.gradle.daemon=false'
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.jdk }}
          cache: 'gradle'
      - uses: actions/download-artifact@v2
        id: download
        with:
          name: maven-artifacts
          path: build
      - uses: actions/github-script@v5
        id: jar-file
        with:
          result-encoding: string
          script: |
            const globber = await glob.create('build/libs/google-java-format-gradle-plugin-*.jar')
            const jarFile = await globber.glob()
            console.log('Found file: ' + jarFile)
            return jarFile
      - uses: actions/github-script@v5
        id: pom-file
        with:
          result-encoding: string
          script: |
            const globber = await glob.create('build/publications/maven/pom-default.xml')
            const pomFile = await globber.glob()
            console.log('Found file: ' + pomFile)
            return pomFile
      - run: mvn --batch-mode install:install-file -Dfile='${{ steps.jar-file.outputs.result }}' -DpomFile='${{ steps.pom-file.outputs.result }}'
      # - name: Restore local maven repo containing published plugin
      #   id: cache
      #   uses: actions/cache@v2
      #   with:
      #     path: ~/.m2/repository
      #     key: maven-local-${{ github.run_number }}-${{github.run_attempt }}
      # - if: steps.cache.outputs.cache-hit != 'true'
      #   uses: actions/github-script@v3
      #   with:
      #     script: |
      #       core.setFailed('Couldn't restore local maven repo containing the published plugin')
      - run: ./scripts/travis-integ-tests.sh

